# Use root/example as user/password credentials
version: "3.8"

services:
  app:
    container_name: node-app
    build:
      context: .
      dockerfile: Dockerfile
    image: pepi
    command: sh -c "yarn install && yarn run dev"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    depends_on:
      - mongo
    volumes:
      - .:/src
    networks:
      - node-network

  mongo:
    image: mongo:6-jammy # versiona tinnier than latest
    restart: always
    container_name: mongo-app
    environment: # set required env var  to accces mongo
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "secret"
      MONGO_INITDB_DATABASE: users
    ports:
      - "27017:27017"
    volumes:
      # - ./init/init-script.js:/docker-entrypoint-initdb.d/init-mongo.js:ro # volumen de read-only
      - ./data:/data/db/ # persistir todas las colleciones
      - ./data/log:/var/log/mongodb/ # persistir los logs
    networks:
      - node-network

  mongo-express:
    image: mongo-express:latest
    restart: always
    container_name: express-app
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "root"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "secret"
      ME_CONFIG_BASICAUTH_USERNAME: "root"
      ME_CONFIG_BASICAUTH_PASSWORD: "papi"
      ME_CONFIG_MONGODB_URL: mongodb://root:secret@mongo:27017/
    links:
      - mongo # Espicificamos que esta conectado al contenedor mongo
    networks:
      - node-network

# volumes:
#   dbdata6:

networks:
  node-network:
    driver: bridge
